<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.net.sparrow.mapper.sys.UserMapper">

    <resultMap type="com.net.sparrow.entity.sys.UserEntity" id="UserResult">
        <result property="id" column="id"/>
        <result property="avatarId" column="avatar_id"/>
        <result property="email" column="email"/>
        <result property="password" column="password"/>
        <result property="userName" column="user_name"/>
        <result property="deptId" column="dept_id"/>
        <result property="phone" column="phone"/>
        <result property="jobId" column="job_id"/>
        <result property="lastChangePasswordTime" column="last_change_password_time"/>
        <result property="nickName" column="nick_name"/>
        <result property="sex" column="sex"/>
        <result property="validStatus" column="valid_status"/>
        <result property="createUserId" column="create_user_id"/>
        <result property="createUserName" column="create_user_name"/>
        <result property="createTime" column="create_time"/>
        <result property="updateUserId" column="update_user_id"/>
        <result property="updateUserName" column="update_user_name"/>
        <result property="updateTime" column="update_time"/>
        <result property="isDel" column="is_del"/>
    </resultMap>


    <sql id="paginationSql">
        <if test="pageSize > 0">
            LIMIT #{pageBegin} , #{pageSize}
        </if>
    </sql>

    <sql id="selectUserColumn">
        id
        ,
         avatar_id,
         email,
         password,
         user_name,
         dept_id,
         phone,
         job_id,
         last_change_password_time,
         nick_name,
         sex,
         valid_status,
         create_user_id,
         create_user_name,
         create_time,
         update_user_id,
         update_user_name,
         update_time,
         is_del
    </sql>

    <sql id="queryWhere">
        <where>
            <if test="blurry !=null and blurry !=''">
                AND (user_name LIKE CONCAT ('%', #{blurry},'%') OR nick_name LIKE CONCAT ('%', #{blurry},'%') OR email
                LIKE CONCAT ('%', #{blurry},'%'))
            </if>

            <if test="id != null ">
                AND id = #{id}
            </if>

            <if test="avatarId != null ">
                AND avatar_id = #{avatarId}
            </if>

            <if test="email != null  and email != ''">
                AND email = #{email}
            </if>

            <if test="password != null  and password != ''">
                AND password = #{password}
            </if>

            <if test="userName != null  and userName != ''">
                AND user_name = #{userName}
            </if>

            <if test="deptId != null ">
                AND dept_id = #{deptId}
            </if>

            <if test="phone != null  and phone != ''">
                AND phone = #{phone}
            </if>

            <if test="jobId != null ">
                AND job_id = #{jobId}
            </if>

            <if test="lastChangePasswordTime != null ">
                AND last_change_password_time = #{lastChangePasswordTime}
            </if>

            <if test="nickName != null  and nickName != ''">
                AND nick_name = #{nickName}
            </if>

            <if test="sex != null ">
                AND sex = #{sex}
            </if>

            <if test="validStatus != null ">
                AND valid_status = #{validStatus}
            </if>

            <if test="createUserId != null ">
                AND create_user_id = #{createUserId}
            </if>

            <if test="createUserName != null  and createUserName != ''">
                AND create_user_name = #{createUserName}
            </if>

            <if test="createTime != null ">
                AND create_time = #{createTime}
            </if>

            <if test="updateUserId != null ">
                AND update_user_id = #{updateUserId}
            </if>

            <if test="updateUserName != null  and updateUserName != ''">
                AND update_user_name = #{updateUserName}
            </if>

            <if test="updateTime != null ">
                AND update_time = #{updateTime}
            </if>

            <if test="createBeginTime != null and createBeginTime !=''">
                AND create_time >= #{createBeginTime}
            </if>

            <if test="createEndTime != null and createEndTime !=''">
                AND create_time <![CDATA[<]]> #{createEndTime}
            </if>

            <if test="isDel != null ">
                AND is_del = #{isDel}
            </if>
            AND is_del = 0
        </where>
    </sql>

    <update id="updateForBatch" parameterType="com.net.sparrow.entity.sys.UserEntity">
        <foreach collection="list" item="entity" separator=";">
            UPDATE sys_user
            SET password = #{entity.password},update_user_id=#{entity.updateUserId},update_user_name=#{entity.updateUserName}
            <where>
                id = #{entity.id}
            </where>
        </foreach>
    </update>

    <select id="findById" parameterType="Long"
            resultMap="UserResult">
        SELECT
        <include refid="selectUserColumn"/>
        FROM sys_user
        WHERE id = #{id}
    </select>

    <select id="searchByCondition"
            parameterType="com.net.sparrow.entity.sys.UserConditionEntity"
            resultMap="UserResult">
        SELECT
        <include refid="selectUserColumn"/>
        FROM sys_user
        <include refid="queryWhere"/>
        <include refid="paginationSql"/>
    </select>

    <select id="searchCount"
            parameterType="com.net.sparrow.entity.sys.UserConditionEntity"
            resultType="int">
        SELECT
        COUNT(*)
        FROM sys_user
        <include refid="queryWhere"/>
    </select>


    <update id="update" parameterType="com.net.sparrow.entity.sys.UserEntity">
        UPDATE sys_user
        <trim prefix="SET" suffixOverrides=",">

            <if test="avatarId != null ">
                avatar_id = #{avatarId},
            </if>


            <if test="email != null  and email != ''">
                email = #{email},
            </if>


            <if test="password != null  and password != ''">
                password = #{password},
            </if>


            <if test="userName != null  and userName != ''">
                user_name = #{userName},
            </if>


            <if test="deptId != null ">
                dept_id = #{deptId},
            </if>


            <if test="phone != null  and phone != ''">
                phone = #{phone},
            </if>


            <if test="jobId != null ">
                job_id = #{jobId},
            </if>


            <if test="lastChangePasswordTime != null ">
                last_change_password_time = #{lastChangePasswordTime},
            </if>


            <if test="nickName != null  and nickName != ''">
                nick_name = #{nickName},
            </if>


            <if test="sex != null ">
                sex = #{sex},
            </if>


            <if test="validStatus != null ">
                valid_status = #{validStatus},
            </if>


            <if test="createUserId != null ">
                create_user_id = #{createUserId},
            </if>


            <if test="createUserName != null  and createUserName != ''">
                create_user_name = #{createUserName},
            </if>


            <if test="createTime != null ">
                create_time = #{createTime},
            </if>

            <if test="isDel != null ">
                is_del = #{isDel},
            </if>

            <if test="lastLoginCity != null and lastLoginCity !=''">
                last_login_city = #{lastLoginCity},
            </if>

            <if test="lastLoginTime != null">
                last_login_time = #{lastLoginTime},
            </if>
            update_user_id = #{CURRENT_USER_ID},
            update_user_name = #{CURRENT_USER_NAME},
            update_time = now(3),
        </trim>
        WHERE id = #{id}
    </update>

    <delete id="deleteByIds">
        UPDATE sys_user
        SET is_del =
        1,update_time=now(3),update_user_id=#{entity.updateUserId},update_user_name=#{entity.updateUserName}
        WHERE id IN
        <foreach collection="ids" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </delete>
    <insert id="insert" parameterType="com.net.sparrow.entity.sys.UserEntity" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO sys_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            id,
            <if test="avatarId != null ">
                avatar_id,
            </if>


            <if test="email != null  and email != ''">
                email,
            </if>


            <if test="password != null  and password != ''">
                password,
            </if>


            <if test="userName != null  and userName != ''">
                user_name,
            </if>


            <if test="deptId != null ">
                dept_id,
            </if>


            <if test="phone != null  and phone != ''">
                phone,
            </if>


            <if test="jobId != null ">
                job_id,
            </if>


            <if test="lastChangePasswordTime != null ">
                last_change_password_time,
            </if>


            <if test="nickName != null  and nickName != ''">
                nick_name,
            </if>


            <if test="sex != null ">
                sex,
            </if>


            <if test="validStatus != null ">
                valid_status,
            </if>


            create_user_id,
            create_user_name,
            create_time,

            <if test="updateUserId != null ">
                update_user_id,
            </if>


            <if test="updateUserName != null  and updateUserName != ''">
                update_user_name,
            </if>


            <if test="updateTime != null ">
                update_time,
            </if>


            <if test="isDel != null ">
                is_del,
            </if>

        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            #{GENERATE_ID},
            <if test="avatarId != null ">
                #{avatarId},
            </if>

            <if test="email != null  and email != ''">
                #{email},
            </if>

            <if test="password != null  and password != ''">
                #{password},
            </if>

            <if test="userName != null  and userName != ''">
                #{userName},
            </if>

            <if test="deptId != null ">
                #{deptId},
            </if>

            <if test="phone != null  and phone != ''">
                #{phone},
            </if>

            <if test="jobId != null ">
                #{jobId},
            </if>

            <if test="lastChangePasswordTime != null ">
                #{lastChangePasswordTime},
            </if>

            <if test="nickName != null  and nickName != ''">
                #{nickName},
            </if>

            <if test="sex != null ">
                #{sex},
            </if>

            <if test="validStatus != null ">
                #{validStatus},
            </if>

            #{CURRENT_USER_ID},
            #{CURRENT_USER_NAME},
            now(3),

            <if test="updateUserId != null ">
                #{updateUserId},
            </if>

            <if test="updateUserName != null  and updateUserName != ''">
                #{updateUserName},
            </if>

            <if test="updateTime != null ">
                #{updateTime},
            </if>

            <if test="isDel != null ">
                #{isDel},
            </if>

        </trim>
    </insert>
    <select id="findByIds" parameterType="Long"
            resultMap="UserResult">
        SELECT
        <include refid="selectUserColumn"/>
        FROM sys_user
        WHERE id IN
        <foreach collection="ids" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </select>

    <select id="findByUserName" parameterType="String" resultMap="UserResult">
        SELECT
        <include refid="selectUserColumn"/>
        FROM sys_user
        <where>
            AND user_name = #{userName}
            AND is_del = 0
        </where>
    </select>

</mapper>
